<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <link rel="stylesheet" href="${rootURL}/plugin/jenkins-config-ops-plugin/css/nacos-config-index.css"
          type="text/css"/>
    <j:set var="escapeEntryTitleAndDescription" value="false"/>

    <div name="parameter">
        <input type="hidden" name="name" value="${h.escape(it.name)}"/>

        <f:checkbox title="Show Preview" field="hello" default="true" name="showPreview"/>
        <div name="value">
            <table class="jenkins-table">
                <thead>
                    <tr>
                        <th scope="col">
                            <input id="selectAll" name="checkAll" type="checkbox"/>
                        </th>
                        <th scope="col">Namespace</th>
                        <th scope="col">Group</th>
                        <th scope="col">DataId</th>
                        <th scope="col">Patch Version</th>
                    </tr>
                </thead>
                <tbody>
                    <j:forEach var="item" varStatus="status" items="${it.getChoices()}">
                        <tr name="${status.index}">
                            <td>
                                <input name="check" class="row-checkbox" type="checkbox"/>
                            </td>
                            <td>
                                <input type="hidden" name="namespace" value="${item.namespace}"/>
                                ${item.namespace}
                            </td>
                            <td>
                                <input type="hidden" name="group" value="${item.group}"/>
                                ${item.group}
                            </td>
                            <td>
                                <input type="hidden" name="dataId" value="${item.dataId}"/>
                                ${item.dataId}
                            </td>
                            <td>
                                <select id="version" name="version">
                                    <j:forEach var="v" items="${item.fillVersionItems().values()}">
                                        <option value="${v.value}">
                                            ${v.name}
                                        </option>
                                    </j:forEach>
                                </select>
                            </td>
                        </tr>
                    </j:forEach>
                </tbody>
            </table>
        </div>
    </div>


    <script src="${rootURL}/plugin/jenkins-config-ops-plugin/js/nacos-config.js" type="text/javascript"
            charset="utf-8"/>

    <script type="text/javascript">
        <![CDATA[
        const BASE_URL = "${rootURL}/descriptorByName/io.jenkins.plugins.configops.nacos.NacosConfigChoicesParameterDefinition";
        // const jsonChoices = '${it.json}';

        document.addEventListener('DOMContentLoaded', function () {
            const selectAllCheckbox = document.getElementById('selectAll');
            const rowCheckboxes = document.querySelectorAll('.row-checkbox');
            const tableRows = document.querySelectorAll('tbody tr');
            selectAllCheckbox.addEventListener('change', function () {
                rowCheckboxes.forEach(function (checkbox) {
                    checkbox.checked = selectAllCheckbox.checked;
                });
            });
            // 监听每个行复选框的点击事件
            rowCheckboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    // 如果有未选中的行复选框，则取消表头复选框的全选状态
                    if (!checkbox.checked) {
                        selectAllCheckbox.checked = false;
                    } else {
                        // 如果所有行复选框都被选中，则将表头复选框设置为全选状态
                        const allChecked = Array.from(rowCheckboxes).every(cb => cb.checked);
                        selectAllCheckbox.checked = allChecked;
                    }
                });
            });
            // 监听每个行的点击事件
            tableRows.forEach(function (row) {
                row.addEventListener('click', function (event) {
                    // 防止点击复选框时触发行的点击事件
                    if (event.target.type === 'checkbox') return;

                    if (event.target.type === 'select-one') return;

                    const checkbox = row.querySelector('.row-checkbox');
                    checkbox.checked = !checkbox.checked;

                    // 更新表头复选框的状态
                    const allChecked = Array.from(rowCheckboxes).every(cb => cb.checked);
                    selectAllCheckbox.checked = allChecked;
                });
            });
            /*const namespaceGroupSel = document.getElementById("namespaceGroup");
            const dataIdSel = document.getElementById("dataId");
            const versionSel = document.getElementById("version");

            namespaceGroupSel.disabled = true;
            dataIdSel.disabled = true;
            versionSel.disabled = true;
            requestAndFillNacosOptions(namespaceGroupSel, BASE_URL + "/fillNamespaceGroupItems", {
                'json': jsonChoices
            }, () => {
                updateDataIdItems(namespaceGroupSel, dataIdSel, versionSel, BASE_URL, jsonChoices)
            })

            namespaceGroupSel.addEventListener("change", function () {
                namespaceGroupSel.disabled = true;
                dataIdSel.disabled = true;
                versionSel.disabled = true;
                updateDataIdItems(namespaceGroupSel, dataIdSel, versionSel, BASE_URL, jsonChoices)
            })

            dataIdSel.addEventListener("change", function () {
                namespaceGroupSel.disabled = true;
                dataIdSel.disabled = true;
                versionSel.disabled = true;
                updateVersionItems(namespaceGroupSel, dataIdSel, versionSel, BASE_URL, jsonChoices)
            })*/

        })
        ]]>
    </script>

</j:jelly>
